#!/bin/bash

while true
do

# Logo
source ~/.bash_profile

echo "============================================================"
curl -s https://raw.githubusercontent.com/AlekseyMoskalev1/script/main/Noders.sh | bash
echo "============================================================"


PS3='Select an action: '
options=(
"Prepare the server for installation" 
"Install DEFUND Node"
"Create wallet"
"Recover wallet"
"Log Node" 
"Check node status" 
"Request for tokens in Discord" 
"Parametrs and balance" 
"Create validator" 
"Check validator"
"Delete node"
"Exit")
select opt in "${options[@]}"
               do
                   case $opt in
                   
"Prepare the server for installation")
echo "============================================================"
echo "Preparation has begun"
echo "============================================================"

#INSTALL DEPEND
echo "============================================================"
echo "Update and install APT"
echo "============================================================"
sleep 3
sudo apt update && sudo apt upgrade -y && \
sudo apt install curl tar wget clang pkg-config libssl-dev libleveldb-dev jq build-essential bsdmainutils git make ncdu htop screen unzip bc fail2ban htop -y

#INSTALL GO
echo "============================================================"
echo "Install GO 1.19.1"
echo "============================================================"
sleep 3
cd $HOME && \
ver="1.19.1" && \
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" && \
sudo rm -rf /usr/local/go && \
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" && \
rm "go$ver.linux-amd64.tar.gz" && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile && \
source $HOME/.bash_profile

echo "============================================================"
echo "The server is ready!"
echo "============================================================"
break
;;
            
"Install DEFUND Node")
echo "============================================================"
echo "Set parameters"
echo "============================================================"
echo "Enter NodName:"
echo "============================================================"
                
read NODENAME
NODENAME=$NODENAME
echo 'export NODENAME='${NODENAME} >> $HOME/.bash_profile

echo "============================================================"
echo "Enter WalletName:"
echo "============================================================"
               
read NODEWALLET
NODEWALLET=$NODEWALLET
echo 'export NODEWALLET='${NODEWALLET} >> $HOME/.bash_profile
NODECHAIN=""defund-private-3""
echo 'export NODECHAIN='${NODECHAIN} >> $HOME/.bash_profile
source $HOME/.bash_profile

echo "============================================================"
echo "Installation started"
echo "============================================================"
cd $HOME

git clone https://github.com/defund-labs/defund
cd defund
git checkout v0.1.0
make install

defundd init $NODENAME --chain-id=$NODECHAIN
defundd config chain-id defund-private-3

cd $HOME/.defund/config/
wget -O $HOME/.defund/config/defund-private-3-gensis.tar.gz "https://raw.githubusercontent.com/defund-labs/testnet/main/defund-private-3/defund-private-3-gensis.tar.gz"
rm -rf $HOME/.defund/config/genesis.json
tar -xzvf defund-private-3-gensis.tar.gz
rm -rf defund-private-3-gensis.tar.gz

wget -O $HOME/.defund/config/addrbook.json "https://raw.githubusercontent.com/obajay/nodes-Guides/main/DeFund/addrbook.json"

sed -i.bak -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.0ufetf\"/;" ~/.defund/config/app.toml
sed -i -e "s/^filter_peers *=.*/filter_peers = \"true\"/" $HOME/.defund/config/config.toml
external_address=$(wget -qO- eth0.me)
sed -i.bak -e "s/^external_address *=.*/external_address = \"$external_address:26656\"/" $HOME/.defund/config/config.toml
peers="dff3a67755a5832198447224196654374c7ef95d@65.21.170.3:40656,daff7b8cbcae4902c3c4542113ba521f968cc3f8@213.239.217.52:29656,445425e51dc42603cfeac805816bcdda2fb8a6a1@65.109.54.110:26631,f2985029a48319330b99767d676412383e7061bf@194.163.155.84:36656,75cccc67bc20e7e5429b80c4255ffe44ef24bc26@65.109.85.170:33656"
sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.defund/config/config.toml
seeds="85279852bd306c385402185e0125dffeed36bf22@38.146.3.194:26656"
sed -i.bak -e "s/^seeds =.*/seeds = \"$seeds\"/" $HOME/.defund/config/config.toml
sed -i 's/max_num_inbound_peers =.*/max_num_inbound_peers = 100/g' $HOME/.defund/config/config.toml
sed -i 's/max_num_outbound_peers =.*/max_num_outbound_peers = 100/g' $HOME/.defund/config/config.toml

pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="10"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.defund/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.defund/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.defund/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.defund/config/app.toml

indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/.defund/config/config.toml

sudo tee /etc/systemd/system/defundd.service > /dev/null <<EOF
[Unit]
Description=defund
After=network-online.target

[Service]
User=$USER
ExecStart=$(which defundd) start
Restart=on-failure
RestartSec=3
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

# start service
sudo systemctl daemon-reload
sudo systemctl enable defundd
sudo systemctl restart defundd
echo "============================================================"
echo "Installation complete!"
echo "============================================================"
break
;;

"Create wallet")
defundd keys add $NODEWALLET
NODEADDRWALL=$(defundd keys show $NODEWALLET -a)
NODEVAL=$(defundd keys show $NODEWALLET --bech val -a)
echo 'export NODEVAL='${NODEVAL} >> $HOME/.bash_profile
echo 'export NODEADDRWALL='${NODEADDRWALL} >> $HOME/.bash_profile
source $HOME/.bash_profile
echo "============================================================"
echo "Wallet addres: $NODEADDRWALL"
echo "Valoper addres: $NODEVAL"
echo "============================================================"
break
;;

"Recover wallet")
defundd keys add $NODEWALLET --recover
NODEADDRWALL=$(defundd keys show $NODEWALLET -a)
NODEVAL=$(defundd keys show $NODEWALLET --bech val -a)
echo 'export NODEVAL='${NODEVAL} >> $HOME/.bash_profile
echo 'export NODEADDRWALL='${NODEADDRWALL} >> $HOME/.bash_profile
source $HOME/.bash_profile
echo "============================================================"
echo "Wallet addres: $NODEADDRWALL"
echo "Valoper addres: $NODEVAL"
echo "============================================================"
break
;;

"Check node status")
echo "============================================================"
echo "Synchronization status must be false to continue!"
echo "============================================================"
echo "Synchronization status = $(curl -s localhost:26657/status)"
echo "Block height = $(defundd status 2>&1 | jq ."SyncInfo"."latest_block_height")"
echo "Skipped Blocks and Validator Creation Block $(defundd q slashing signing-info $(defundd tendermint show-validator))"
echo "============================================================"
break
;;
"Create validator")
echo "============================================================"
echo "Synchronization status must be false to continue!"
echo "Synchronization status = $(curl -s localhost:26657/status)"
echo "============================================================"

defundd tx staking create-validator \
--amount=1000000ufetf \
--pubkey=$(defundd tendermint show-validator) \
--moniker="$NODENAME" \
--chain-id=defund-private-3 \
--commission-rate="0.01" \
--commission-max-rate="0.10" \
--commission-max-change-rate="0.01" \
--min-self-delegation="1000000" \
--from=$NODEWALLET \
-y
               
break
;;
"Parametrs and balance")
echo "============================================================"
echo "Your parameters"
echo "============================================================"
echo "Name Node: $NODENAME"
echo "Address: $NODEADDRWALL" 
echo "Your balance: $(gitopiad query bank balances $NODEADDRWALL)"
echo "============================================================"
break
;;
"Check validator") 
echo "============================================================"
echo "Account request: $(defundd q auth account $(defundd keys show $NODEADDRWALL -a) -o text)"
echo "Validator info: $(defundd q staking validator $NODEVAL)"
echo "============================================================"
break
;;
"Request for tokens in Discord")
echo "============================================================"
echo "In order to request tokens - you need go to DeFund Discord and come to fauccet channel https://discord.gg/ZmNFPRWp3b"
echo "============================================================"
echo -e "Your address $(defundd keys export $NODEWALLET)"
echo "============================================================"
break
;;
"Log Node")
sudo journalctl -u defundd -f -o cat
break
;;
"Delete node")

sudo systemctl stop defundd && \
sudo systemctl disable defundd && \
rm /etc/systemd/system/defundd.service && \
sudo systemctl daemon-reload && \
cd $HOME && \
rm -rf defund && \
rm -rf .defundd && \
rm -rf $(which defundd)
break
;;
"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done
