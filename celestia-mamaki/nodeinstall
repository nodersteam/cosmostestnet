#!/bin/bash

while true
do

# Logo

echo "========================================================================================================================"
curl -s https://raw.githubusercontent.com/nodersteam/script/main/Noders.sh | bash
echo "========================================================================================================================"

# Menu

PS3='Select an action: '
options=(
"Prepear server"
"Install Node"
"Check Log"
"Check Sync"
"Check BlockHigh"
"Check Balance"
"Request tokens in discord"
"Create Validator"
"Delete Node"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Delete Node")
sudo systemctl stop celestia-appd
sudo systemctl disable celestia-appd
rm -r $HOME/.celestia-app
rm -r $HOME/celestia-app
rm -f /etc/systemd/system/celestia-appd.service
break
;;

"Check Sync")
echo "============================================================"
echo "Synchronization = $(curl -s localhost:26657/status | jq .result.sync_info.catching_up)"
echo "============================================================"
break
;;

"Check BlockHigh")
echo "============================================================"
echo "BlockHigh = $(celestia-appd status | jq .SyncInfo.latest_block_height)"
echo "============================================================"
break
;;

"Prepear server")

#UPDATE APT
sudo apt update && sudo apt upgrade -y
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

#INSTALL GO
wget https://golang.org/dl/go1.18.1.linux-amd64.tar.gz; \
rm -rv /usr/local/go; \
tar -C /usr/local -xzf go1.18.1.linux-amd64.tar.gz && \
rm -v go1.18.1.linux-amd64.tar.gz && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile && \
source ~/.bash_profile && \
go version

break
;;

"Install Node")
echo "============================================================"
echo "Install start"
echo "============================================================"
echo "Setup NodeName:"
echo "============================================================"
read NODENAME
echo "============================================================"
echo "Setup WalletName:"
echo "============================================================"
read WALLETNAME
echo export NODENAME=${NODENAME} >> $HOME/.bash_profile
echo export WALLETNAME=${WALLETNAME} >> $HOME/.bash_profile
echo export CHAIN_ID=mamaki >> $HOME/.bash_profile
source ~/.bash_profile

cd $HOME
rm -rf $HOME/celestia-app $HOME/.celestia-app
#INSTALL
git clone https://github.com/celestiaorg/celestia-app
cd celestia-app
git fetch
git checkout v0.6.0
make install

celestia-appd init $NODENAME --chain-id $CHAIN_ID
celestia-appd config chain-id $CHAIN_ID

echo "============================================================"
echo "Be sure to write down the mnemonic!"
echo "============================================================"
#WALLET
celestia-appd keys add $WALLETNAME

celestia-appd unsafe-reset-all --home $HOME/.celestia-app
rm $HOME/.celestia-app/config/genesis.json
wget -O $HOME/.celestia-app/config/genesis.json "https://github.com/celestiaorg/networks/raw/master/mamaki/genesis.json"

external_address=$(wget -qO- eth0.me)
peers="bf199295d4c142ebf114232613d4796e6d81a8d0@159.69.110.238:26656,6c076056fc80a813b26e24ba8d28fa374cd72777@149.102.153.197:26656,180378bab87c9cecea544eb406fcd8fcd2cbc21b@168.119.122.78:26656,180378bab87c9cecea544eb406fcd8fcd2cbc21b@168.119.122.78:26656,42b331adaa9ece4c455b92f0d26e3382e46d43f0@161.97.180.20:36656,853a9fbb633aed7b6a8c759ba99d1a7674b706a3@38.242.216.151:26656,f7b68a491bae4b10dbab09bb3a875781a01274a5@65.108.199.79:20356,e4429e99609c8c009969b0eb73c973bff33712f9@141.94.73.39:43656,09263a4168de6a2aaf7fef86669ddfe4e2d004f6@142.132.209.229:26656,13d8abce0ff9565ed223c5e4b9906160816ee8fa@94.62.146.145:36656,72b34325513863152269e781d9866d1ec4d6a93a@65.108.194.40:26676,322542cec82814d8903de2259b1d4d97026bcb75@51.178.133.224:26666,5273f0deefa5f9c2d0a3bbf70840bb44c65d835c@80.190.129.50:49656,7145da826bbf64f06aa4ad296b850fd697a211cc@176.57.189.212:26656,5a4c337189eed845f3ece17f88da0d94c7eb2f9c@209.126.84.147:26656,ec072065bd4c6126a5833c97c8eb2d4382db85be@88.99.249.251:26656,cd1524191300d6354d6a322ab0bca1d7c8ddfd01@95.216.223.149:26656,2fd76fae32f587eceb266dce19053b20fce4e846@207.154.220.138:26656,1d6a3c3d9ffc828b926f95592e15b1b59b5d8175@135.181.56.56:26656,fe2025284ad9517ee6e8b027024cf4ae17e320c9@198.244.164.11:26656,fcff172744c51684aaefc6fd3433eae275a2f31b@159.203.18.242:26656"
sed -i.bak -e "s/^persistent-peers *=.*/persistent-peers = \"$peers\"/" $HOME/.celestia-app/config/config.toml
SEEDS=""
sed -i -e "/seeds =/ s/= .*/= \"$SEEDS\"/"  $HOME/.celestia-app/config/config.toml
bpeers="f0c58d904dec824605ac36114db28f1bf84f6ea3@144.76.112.238:26656"
sed -i.bak -e "s/^bootstrap-peers *=.*/bootstrap-peers = \"$bpeers\"/" $HOME/.celestia-app/config/config.toml

# config pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="5000"
pruning_interval="10"

sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.celestia-app/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \
\"$pruning_keep_recent\"/" $HOME/.celestia-app/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \
\"$pruning_keep_every\"/" $HOME/.celestia-app/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \
\"$pruning_interval\"/" $HOME/.celestia-app/config/app.toml
sed -i.bak -e "s/^timeout-commit *=.*/timeout-commit = \"25s\"/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^skip-timeout-commit *=.*/skip-timeout-commit = false/" $HOME/.celestia-app/config/config.toml
sed -i.bak -e "s/^mode *=.*/mode = \"validator\"/" $HOME/.celestia-app/config/config.toml
external_address=$(wget -qO- eth0.me)
sed -i.bak -e "s/^external-address = \"\"/external-address = \"$external_address:26656\"/" $HOME/.celestia-app/config/config.toml


tee $HOME/celestia-appd.service > /dev/null <<EOF
[Unit]
Description=celestia-appd
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which celestia-appd) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

sudo mv $HOME/celestia-appd.service /etc/systemd/system/

# start service
sudo systemctl daemon-reload
sudo systemctl enable celestia-appd
sudo systemctl restart celestia-appd

break
;;

"Check Log")

journalctl -u celestia-appd -f -o cat

break
;;


"Check Balance")
celestia-appd q bank balances $(celestia-appd keys show $WALLETNAME -a --bech acc)
break
;;

"Create Validator")
celestia-appd tx staking create-validator \
  --amount 1000000utia \
  --from $WALLETNAME \
  --commission-max-change-rate "0.05" \
  --commission-max-rate "0.20" \
  --commission-rate "0.05" \
  --min-self-delegation "1" \
  --pubkey $(celestia-appd tendermint show-validator) \
  --moniker $NODENAME \
  --chain-id $CHAIN_ID \
  --gas 300000 \
  -y
break
;;

"Request tokens in discord")
echo "========================================================================================================================"
echo "You can request from Mamaki Testnet Faucet on the #faucet channel on Celestia's Discord server with the following command: $request <CELESTIA-ADDRESS>"
echo "========================================================================================================================"

break
;;

"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done
